//************************************************************************//
//	LCD NOKIA1100
//	Alex_EXE 
//	http://alex-exe.ru/category/radio/stm32/lcd-nokia1100-stm32
//	http://www.sunbizhosting.com/~spiral/1100/
//************************************************************************//
#ifndef LCD_NOKIA1100_H_

#include "stm32f0xx_hal.h"

#define SetBit(x,y) (x|=(1<<y))
#define ClrBit(x,y) (x&=~(1<<y))
#define ToggleBit(x,y) (x^=(1<<y))
#define TestBit(x,y) (x&(1<<y))
/*
enum
{
    LCD_NOKIA1100_SET_X_ADDRESS_LOWER_4BITS = 0x00,
    LCD_NOKIA1100_SET_X_ADDRESS_UPPER_3BITS = 0x10,
    LCD_NOKIA1100_SET_Y_ADDRESS = 0xB0,
    LCD_NOKIA1100_SET_START_ROW_ADDRESS_6BITS = 0x40,
    LCD_NOKIA1100_DIPLAY_OFF = 0xAE,
    LCD_NOKIA1100_DIPLAY_ON = 0xAF,
    LCD_NOKIA1100_PIXELS_ALL_OFF = 0xA4,
    LCD_NOKIA1100_PIXELS_ALL_ON = 0xA5,
    LCD_NOKIA1100_DISPLAY_INVERSE_ON = 0xA7,
    LCD_NOKIA1100_DISPLAY_INVERSE_OFF = 0xA6,
    LCD_NOKIA1100_CHARGE_PUMP_ON = 0x2F,
    LCD_NOKIA1100_CHARGE_PUMP_OFF = 0x28
} lcd_nokia1100_cmd;
*/
//************************************************************************//
//			Конфигурация порта
//	используемый порт
#define lcd1100_port			GPIOA
//	используемые выводы
#define lcd1100_pin_SCLK		GPIO_PIN_3
#define lcd1100_pin_SDA			GPIO_PIN_4
#define lcd1100_pin_CS			GPIO_PIN_5
#define lcd1100_pin_RST			GPIO_PIN_6
//	включить тактирование порта
#define lcd1100_RCC_Enable			__HAL_RCC_GPIOA_CLK_ENABLE();

//	Используемые биты для работы с дисплеем. 
//	Так же в основном коде программы выводы нужно инициализировать
#define lcd1100_SCLK_on 	HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_SCLK, GPIO_PIN_SET);
#define lcd1100_SDA_on 		HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_SDA, GPIO_PIN_SET);
#define lcd1100_CS_on 		HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_CS, GPIO_PIN_SET);
#define lcd1100_RST_on 		HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_RST, GPIO_PIN_SET);
#define lcd1100_SCLK_off 	HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_SCLK, GPIO_PIN_RESET);
#define lcd1100_SDA_off 	HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_SDA, GPIO_PIN_RESET);
#define lcd1100_CS_off 		HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_CS, GPIO_PIN_RESET);
#define lcd1100_RST_off 	HAL_GPIO_WritePin(lcd1100_port, lcd1100_pin_RST, GPIO_PIN_RESET);
//************************************************************************//

//	Выбор отправки дисплею команды или данных
#define lcd1100_CMD	0
#define lcd1100_DATA	1

//	Шрифт
static const char lcd1100_font[][5] =
{
	{ 0x00, 0x00, 0x00, 0x00, 0x00 },  // sp
	{ 0x00, 0x00, 0x2f, 0x00, 0x00 },  // !
	{ 0x00, 0x07, 0x00, 0x07, 0x00 },  // "
	{ 0x14, 0x7f, 0x14, 0x7f, 0x14 },  // #
	{ 0x24, 0x2a, 0x7f, 0x2a, 0x12 },  // $
	{ 0x23, 0x13, 0x08, 0x64, 0x62 },  // %				

	{ 0x36, 0x49, 0x55, 0x22, 0x50 },  // &
	{ 0x00, 0x05, 0x03, 0x00, 0x00 },  // '
	{ 0x00, 0x1c, 0x22, 0x41, 0x00 },  // (
	{ 0x00, 0x41, 0x22, 0x1c, 0x00 },  // )
	{ 0x14, 0x08, 0x3E, 0x08, 0x14 },  // *
	{ 0x08, 0x08, 0x3E, 0x08, 0x08 },  // +
	{ 0x00, 0x00, 0x50, 0x30, 0x00 },  // ,
	{ 0x10, 0x10, 0x10, 0x10, 0x10 },  // -
	{ 0x00, 0x60, 0x60, 0x00, 0x00 },  // .
	{ 0x20, 0x10, 0x08, 0x04, 0x02 },  // /
	{ 0x3E, 0x51, 0x49, 0x45, 0x3E },  // 0
	{ 0x00, 0x42, 0x7F, 0x40, 0x00 },  // 1
	{ 0x42, 0x61, 0x51, 0x49, 0x46 },  // 2
	{ 0x21, 0x41, 0x45, 0x4B, 0x31 },  // 3
	{ 0x18, 0x14, 0x12, 0x7F, 0x10 },  // 4
	{ 0x27, 0x45, 0x45, 0x45, 0x39 },  // 5
	{ 0x3C, 0x4A, 0x49, 0x49, 0x30 },  // 6
	{ 0x01, 0x71, 0x09, 0x05, 0x03 },  // 7
	{ 0x36, 0x49, 0x49, 0x49, 0x36 },  // 8
	{ 0x06, 0x49, 0x49, 0x29, 0x1E },  // 9
	{ 0x00, 0x36, 0x36, 0x00, 0x00 },  // :
	{ 0x00, 0x56, 0x36, 0x00, 0x00 },  // ;
	{ 0x08, 0x14, 0x22, 0x41, 0x00 },  // <
	{ 0x14, 0x14, 0x14, 0x14, 0x14 },  // =
	{ 0x00, 0x41, 0x22, 0x14, 0x08 },  // >
	{ 0x02, 0x01, 0x51, 0x09, 0x06 },  // ?
	{ 0x32, 0x49, 0x59, 0x51, 0x3E },  // @
	{ 0x7E, 0x11, 0x11, 0x11, 0x7E },  // A
	{ 0x7F, 0x49, 0x49, 0x49, 0x36 },  // B
	{ 0x3E, 0x41, 0x41, 0x41, 0x22 },  // C
	{ 0x7F, 0x41, 0x41, 0x22, 0x1C },  // D
	{ 0x7F, 0x49, 0x49, 0x49, 0x41 },  // E
	{ 0x7F, 0x09, 0x09, 0x09, 0x01 },  // F
	{ 0x3E, 0x41, 0x49, 0x49, 0x7A },  // G
	{ 0x7F, 0x08, 0x08, 0x08, 0x7F },  // H
	{ 0x00, 0x41, 0x7F, 0x41, 0x00 },  // I
	{ 0x20, 0x40, 0x41, 0x3F, 0x01 },  // J
	{ 0x7F, 0x08, 0x14, 0x22, 0x41 },  // K
	{ 0x7F, 0x40, 0x40, 0x40, 0x40 },  // L
	{ 0x7F, 0x02, 0x0C, 0x02, 0x7F },  // M
	{ 0x7F, 0x04, 0x08, 0x10, 0x7F },  // N
	{ 0x3E, 0x41, 0x41, 0x41, 0x3E },  // O
	{ 0x7F, 0x09, 0x09, 0x09, 0x06 },  // P
	{ 0x3E, 0x41, 0x51, 0x21, 0x5E },  // Q
	{ 0x7F, 0x09, 0x19, 0x29, 0x46 },  // R
	{ 0x46, 0x49, 0x49, 0x49, 0x31 },  // S
	{ 0x01, 0x01, 0x7F, 0x01, 0x01 },  // T
	{ 0x3F, 0x40, 0x40, 0x40, 0x3F },  // U
	{ 0x1F, 0x20, 0x40, 0x20, 0x1F },  // V
	{ 0x3F, 0x40, 0x38, 0x40, 0x3F },  // W
	{ 0x63, 0x14, 0x08, 0x14, 0x63 },  // X
	{ 0x07, 0x08, 0x70, 0x08, 0x07 },  // Y
	{ 0x61, 0x51, 0x49, 0x45, 0x43 },  // Z
	{ 0x00, 0x7F, 0x41, 0x41, 0x00 },  // [
	{ 0x55, 0x2A, 0x55, 0x2A, 0x55 },  // 55
	{ 0x00, 0x41, 0x41, 0x7F, 0x00 },  // ]
	{ 0x04, 0x02, 0x01, 0x02, 0x04 },  // ^
	{ 0x40, 0x40, 0x40, 0x40, 0x40 },  // _
	{ 0x00, 0x01, 0x02, 0x04, 0x00 },  // '
	{ 0x20, 0x54, 0x54, 0x54, 0x78 },  // a
	{ 0x7F, 0x48, 0x44, 0x44, 0x38 },  // b
	{ 0x38, 0x44, 0x44, 0x44, 0x20 },  // c
	{ 0x38, 0x44, 0x44, 0x48, 0x7F },  // d
	{ 0x38, 0x54, 0x54, 0x54, 0x18 },  // e
	{ 0x08, 0x7E, 0x09, 0x01, 0x02 },  // f
	{ 0x0C, 0x52, 0x52, 0x52, 0x3E },  // g
	{ 0x7F, 0x08, 0x04, 0x04, 0x78 },  // h
	{ 0x00, 0x44, 0x7D, 0x40, 0x00 },  // i
	{ 0x20, 0x40, 0x44, 0x3D, 0x00 },  // j
	{ 0x7F, 0x10, 0x28, 0x44, 0x00 },  // k
	{ 0x00, 0x41, 0x7F, 0x40, 0x00 },  // l
	{ 0x7C, 0x04, 0x18, 0x04, 0x78 },  // m
	{ 0x7C, 0x08, 0x04, 0x04, 0x78 },  // n
	{ 0x38, 0x44, 0x44, 0x44, 0x38 },  // o
	{ 0x7C, 0x14, 0x14, 0x14, 0x08 },  // p
	{ 0x08, 0x14, 0x14, 0x18, 0x7C },  // q
	{ 0x7C, 0x08, 0x04, 0x04, 0x08 },  // r
	{ 0x48, 0x54, 0x54, 0x54, 0x20 },  // s
	{ 0x04, 0x3F, 0x44, 0x40, 0x20 },  // t
	{ 0x3C, 0x40, 0x40, 0x20, 0x7C },  // u
	{ 0x1C, 0x20, 0x40, 0x20, 0x1C },  // v
	{ 0x3C, 0x40, 0x30, 0x40, 0x3C },  // w
	{ 0x44, 0x28, 0x10, 0x28, 0x44 },  // x
	{ 0x0C, 0x50, 0x50, 0x50, 0x3C },  // y
	{ 0x44, 0x64, 0x54, 0x4C, 0x44 },  // z

	{ 0x08, 0x08, 0x36, 0x41, 0x41 },  // {
	{ 0x00, 0x00, 0x7F, 0x00, 0x00 },  // |
	{ 0x41, 0x41, 0x36, 0x08, 0x08 },   // }
	{ 0x02, 0x01, 0x02, 0x02, 0x01 },   // ~
   
	{ 0x7E, 0x11, 0x11, 0x11, 0x7E },  // А
	{ 0x7F, 0x49, 0x49, 0x49, 0x33 },  // Б
	{ 0x7F, 0x49, 0x49, 0x49, 0x36 },  // В
	{ 0x7F, 0x01, 0x01, 0x01, 0x03 },  // Г
	{ 0xE0, 0x51, 0x4F, 0x41, 0xFF },  // Д
	{ 0x7F, 0x49, 0x49, 0x49, 0x49 },  // Е
	{ 0x77, 0x08, 0x7F, 0x08, 0x77 },  // Ж
	{ 0x49, 0x49, 0x49, 0x49, 0x36 },  // З
	{ 0x7F, 0x10, 0x08, 0x04, 0x7F },  // И
	{ 0x7C, 0x21, 0x12, 0x09, 0x7C },  // Й
	{ 0x7F, 0x08, 0x14, 0x22, 0x41 },  // К
	{ 0x20, 0x41, 0x3F, 0x01, 0x7F },  // Л
	{ 0x7F, 0x02, 0x0C, 0x02, 0x7F },  // М
	{ 0x7F, 0x08, 0x08, 0x08, 0x7F },  // Н
	{ 0x3E, 0x41, 0x41, 0x41, 0x3E },  // О
	{ 0x7F, 0x01, 0x01, 0x01, 0x7F },  // П
	{ 0x7F, 0x09, 0x09, 0x09, 0x06 },  // Р
	{ 0x3E, 0x41, 0x41, 0x41, 0x22 },  // С
	{ 0x01, 0x01, 0x7F, 0x01, 0x01 },  // Т
	{ 0x27, 0x48, 0x48, 0x48, 0x3F },  // У
	{ 0x1C, 0x22, 0x7F, 0x22, 0x1C },  // Ф
	{ 0x63, 0x14, 0x08, 0x14, 0x63 },  // Х
	{ 0x7F, 0x40, 0x40, 0x40, 0xFF },  // Ц
	{ 0x07, 0x08, 0x08, 0x08, 0x7F },  // Ч
	{ 0x7F, 0x40, 0x7F, 0x40, 0x7F },  // Ш
	{ 0x7F, 0x40, 0x7F, 0x40, 0xFF },  // Щ
	{ 0x01, 0x7F, 0x48, 0x48, 0x30 },  // Ъ
	{ 0x7F, 0x48, 0x30, 0x00, 0x7F },  // Ы
	{ 0x7F, 0x48, 0x48, 0x30, 0x00 },  // Ь
	{ 0x22, 0x41, 0x49, 0x49, 0x3E },  // Э
	{ 0x7F, 0x08, 0x3E, 0x41, 0x3E },  // Ю
	{ 0x46, 0x29, 0x19, 0x09, 0x7F },  // Я
	{ 0x20, 0x54, 0x54, 0x54, 0x78 },  // а
	{ 0x3C, 0x4A, 0x4A, 0x49, 0x31 },  // б
	{ 0x7C, 0x54, 0x54, 0x28, 0x00 },  // в
	{ 0x7C, 0x04, 0x04, 0x04, 0x0C },  // г
	{ 0xE0, 0x54, 0x4C, 0x44, 0xFC },  // д
	{ 0x38, 0x54, 0x54, 0x54, 0x08 },  // е
	{ 0x6C, 0x10, 0x7C, 0x10, 0x6C },  // ж
	{ 0x44, 0x44, 0x54, 0x54, 0x28 },  // з
	{ 0x7C, 0x20, 0x10, 0x08, 0x7C },  // и
	{ 0x78, 0x42, 0x24, 0x12, 0x78 },  // й
	{ 0x7C, 0x10, 0x28, 0x44, 0x00 },  // к
	{ 0x20, 0x44, 0x3C, 0x04, 0x7C },  // л
	{ 0x7C, 0x08, 0x10, 0x08, 0x7C },  // м
	{ 0x7C, 0x10, 0x10, 0x10, 0x7C },  // н
	{ 0x38, 0x44, 0x44, 0x44, 0x38 },  // о
	{ 0x7C, 0x04, 0x04, 0x04, 0x7C },  // п
	{ 0x7C, 0x14, 0x14, 0x14, 0x08 },  // р
	{ 0x38, 0x44, 0x44, 0x44, 0x44 },  // с
	{ 0x04, 0x04, 0x7C, 0x04, 0x04 },  // т
	{ 0x0C, 0x50, 0x50, 0x50, 0x3C },  // у
	{ 0x18, 0x24, 0x7E, 0x24, 0x18 },  // ф
	{ 0x44, 0x28, 0x10, 0x28, 0x44 },  // х
	{ 0x7C, 0x40, 0x40, 0x40, 0xFC },  // ц
	{ 0x0C, 0x10, 0x10, 0x10, 0x7C },  // ч
	{ 0x7C, 0x40, 0x7C, 0x40, 0x7C },  // ш
	{ 0x7C, 0x40, 0x7C, 0x40, 0xFC },  // щ
	{ 0x04, 0x7C, 0x50, 0x50, 0x20 },  // ъ
	{ 0x7C, 0x50, 0x20, 0x00, 0x7C },  // ы
	{ 0x7C, 0x50, 0x50, 0x20, 0x00 },  // ь
	{ 0x28, 0x44, 0x54, 0x54, 0x38 },  // э
	{ 0x7C, 0x10, 0x38, 0x44, 0x38 },  // ю
	{ 0x08, 0x54, 0x34, 0x14, 0x7C }   // я
};

#define FONT48_COUNT  10
#define FONT48_HEIGHT 48
#define FONT48_WIDTH  28

static const unsigned char digit48 [10][48/8][28] = //arial narrow bold  48x28
{
0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF,
0xFE, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFC, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1F, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFE, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80,
0xE0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F,
0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0xC0, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF8, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0x7F, 0x3F,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x07, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xFE, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1F, 0x1F,
0x3F, 0x3F, 0x3F, 0x3F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC,
0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xE0, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0x8F, 0x87, 0x83, 0x81,
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x38, 0x3F, 0x3F, 0x3F,
0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC,
0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xE0, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x0F, 0x03, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC,
0xFE, 0xFF, 0xFF, 0xFF, 0xBF, 0x9F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x3F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x38, 0xF8, 0xF8, 0xFC, 0xFC, 0xFC, 0xFC,
0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFE,
0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xFC,
0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE,
0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x03, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x87, 0x81, 0x80, 0x80,
0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00,
0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFE, 0xFE,
0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x03,
0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x70, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3E, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F,
0x3F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1C, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE,
0xF8, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F,
0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xF8, 0xF8, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFE,
0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1F, 0x1F,
0x1F, 0x1F, 0x0F, 0x0F, 0x0E, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF,
0xF0, 0xF8, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x03, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00,
0x00, 0x01, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0x03, 0x0F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0x7F, 0x7F, 0x7F,
0x3F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC,
0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC,
0xFC, 0xFC, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
0x01, 0x01, 0xC1, 0xF1, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFC, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xC0, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x07, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE,
0xFE, 0xFC, 0xFC, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x9F, 0xBF, 0xFF,
0xFF, 0xFF, 0xFC, 0xFC, 0xF8, 0xF8, 0xF8, 0xF8, 0xFC, 0xFC, 0xFF, 0xFF, 0xBF, 0x9F, 0x0F, 0x07,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x0F, 0x07, 0x03,
0x03, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0, 0x00, 0x00,
0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07,
0x0F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF, 0x7F, 0x7F, 0x7F,
0x3F, 0x1F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xF8, 0xFC,
0xFC, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xE0, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0xF0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x03, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x00,
0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x03, 0x0F,
0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFE, 0x7F, 0x7F, 0x3F, 0x1F, 0xEF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0,
0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFE, 0xFE,
0xFE, 0xFE, 0xFE, 0x7F, 0x7F, 0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define FONT16_COUNT  10
#define FONT16_HEIGHT 16
#define FONT16_WIDTH  10

static const unsigned char digit16 [10][16/8][10] = //arial narrow  16x10
{
0xF8, 0xFE, 0x07, 0x03, 0x03, 0x07, 0xFE, 0xF8, 0x00, 0x00, 0x0F, 0x3F, 0x70, 0x60, 0x60, 0x70,
0x3F, 0x0F, 0x00, 0x00, 0x00, 0x30, 0x18, 0x0C, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0E, 0x07, 0x03, 0x03, 0xC7, 0xFE, 0x3C,
0x00, 0x00, 0x60, 0x78, 0x6C, 0x66, 0x63, 0x61, 0x60, 0x60, 0x00, 0x00, 0x0C, 0x0E, 0x07, 0xC3,
0xC3, 0xE7, 0xBE, 0x1C, 0x00, 0x00, 0x18, 0x38, 0x70, 0x60, 0x60, 0x71, 0x3F, 0x1F, 0x00, 0x00,
0x00, 0xC0, 0xF0, 0x3C, 0x0F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x07, 0x07, 0x06, 0x06, 0x06, 0x7F,
0x7F, 0x06, 0x06, 0x00, 0xF0, 0xFF, 0x6F, 0x63, 0x63, 0xE3, 0xC3, 0x80, 0x00, 0x00, 0x18, 0x38,
0x70, 0x60, 0x60, 0x70, 0x3F, 0x0F, 0x00, 0x00, 0xF8, 0xFE, 0xC6, 0x63, 0x63, 0xE7, 0xCE, 0x8C,
0x00, 0x00, 0x0F, 0x3F, 0x70, 0x60, 0x60, 0x70, 0x3F, 0x1F, 0x00, 0x00, 0x03, 0x03, 0x03, 0x83,
0xE3, 0x7B, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x78, 0x7F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3C, 0xFE, 0xE7, 0xC3, 0xC3, 0xE7, 0xFE, 0x3C, 0x00, 0x00, 0x1F, 0x3F, 0x71, 0x60, 0x60, 0x71,
0x3F, 0x1F, 0x00, 0x00, 0xFC, 0xFE, 0x87, 0x03, 0x03, 0x87, 0xFE, 0xF8, 0x00, 0x00, 0x18, 0x39,
0x73, 0x63, 0x63, 0x31, 0x3F, 0x07, 0x00, 0x00, 
};



//	Задержка для дисплея. Можно подставить местную функцию задержки
void delay_lcd1100(unsigned long  p);

//	Передать данные дисплею
//	Input : cd - команда или данные, с - байт данных или команды
void lcd1100_write(char cd,unsigned char c);

//	инициализация выводов используемым дисплеем
void lcd1100_pin_init(void);

//	Очистка дисплея
void lcd1100_clear(void);

//	Инициализация дисплея
void lcd1100_init(void);

//	Установка курсора
// 	Input : x,y - координаты символа
void lcd1100_gotoxy(unsigned char x,unsigned char y);

//	Преобразование символов через таблицу символов для вывода на дисплей
//	Input : с - символ в ASCII кодировке
unsigned char lcd1100_symbol_decode(unsigned char c);

//	Отправка символа на дисплей
//	Input : с - символ в ASCII кодировке
void lcd1100_putch(unsigned char c);
void lcd1100_putch_inv(unsigned char c);

//	Отправка строки на дисплей
//	Input : *s - ссыла на строку
void lcd1100_puts(unsigned char *s);
void lcd1100_puts_inv(unsigned char *s);

//	Вывод символа на дисплей х2,4,8 размера
//	Input : col - ширина, row - высота, c - символ в ASCII
//	значения ширины и высоты должны быть кратны 2: 1,2,4,8
void lcd1100_putch_big(unsigned char col,unsigned char row,unsigned char c);

//	Вывод строки на дисплей х2,4,8 размера
//	Input : col - ширина, row - высота, *s - ссыла на строку
//	значения ширины и высоты должны быть кратны 2: 1,2,4,8
void lcd1100_puts_big(unsigned char col,unsigned char row,unsigned char *s);

//	Тестовое заполнение дисплея подряд идущим символами
void lcd1100_test(void);

#define LCD_NOKIA1100_H_
#endif
